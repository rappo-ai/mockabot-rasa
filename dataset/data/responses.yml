version: "2.0"

responses:
  utter_help:
  - custom:
      text: |
        *Mockabot Command Usage*

        - /send `"<message>" <bot_token/bot_username> <chatid/group_username> <buttons>` - send simple text message as a bot to a group; optionally can send callback buttons (see syntax below)
        - /reply `"<message>" <bot_token/bot_username> <chatid/group_username> <buttons>` - reply to a message in a group with a simple text message as a bot; optionally can send callback buttons (see syntax below)
        - /replyto - reply to a message in the target group with this command to set the target message to reply to
        - /chatid - get the id of the current chat
        - /clearcache - clears cached bots, bot tokens and groups for the current chat
        - /tutorial - display a getting started tutorial
        - /help - show this help message

        *Notes*
        - /send and /reply generally need both Mockabot and the target bot to be added as admins to the target group chat, as well as any other group used for sending the messages
        - if you reply to a message with /send or /reply, `"<message>"` is not required and ignored and the message being replied to is sent instead; use this to send all kinds of Telegram messages
        - `<bot_token/bot_username>` and `<chatid/group_username>` are optional once you have used these commands in a group; the last used bot token and chat id are cached for future requests
        - `<bot_token/bot_username>` is optional; if not specified we first look for the cached target bot, otherwise we send the message as @mockabot
        - `<chatid/group_username>` is optional; if not specified we first look for the cached target chat, otherwise we use the current chat id
        - syntax for adding buttons is `[Row_1_Button_1_Text, ...Row_1_Button_N_Text], ...[Row_M_Button_1_Text, ...Row_M_Button_N_Text]`; for example `[Place Order, Cancel Order], [Contact Support]`

        Mockabot is open-source and can be found at https://github.com/rappo-ai/mockabot.

        Created by @rappoai - follow us for more useful Telegram bots.
      parse_mode: "Markdown"
      disable_web_page_preview: true
  
  utter_tutorial_step1:
  - custom:
      text: |
        First let's learn about the send command. You can send simple text messages using /send `"<message>"`. Just type /send `"Hello"` to try this out. It will send "Hello" to this chat as Mockabot.

        Once you are done with this step, click /tutorial\_step2 to go to the next step.
      parse_mode: "Markdown"
      disable_web_page_preview: true
  
  utter_tutorial_step2:
  - custom:
      text: |
        Great! Now let's learn to add some callback buttons to the message. You add buttons at the end of the message text by putting the button text inside square brackets like *[Buy Now]*. You can add multiple buttons in a row by using a comma like *[Menu, Help]*. You can add multiple rows by using multiple square brackets like *[Buy Now][Menu, Help]*. Try /send `"Choose an option:" [Buy Now][Menu, Help]` to see this in action.

        Once you are done with this step, click /tutorial\_step3 to go to the next step. Click /tutorial\_step1 to go back.
      parse_mode: "Markdown"
      disable_web_page_preview: true

  utter_tutorial_step3:
  - custom:
      text: |
        Great! Now let's learn to send an image as Mockabot. First post the image to this chat. Then reply to the image with /send.

        Once you are done with this step, click /tutorial\_step4 to go to the next step. Click /tutorial\_step2 to go back .
      parse_mode: "Markdown"
      disable_web_page_preview: true
  
  utter_tutorial_step4:
  - custom:
      text: |
        Awesome! You can use this method to send any type of messages supported by Telegram such as images, videos, audio, etc. You can also reply to an existing message as a bot. Just reply to any existing message with /replyto to set the target message. Then use the command /reply instead of /send to reply to that message.

        Let's try it out. Reply to this message with /replyto. Once you have done that, type /reply `"Understood"` to reply "Understood" to this tutorial message as Mockabot.

        Once you are done with this step, click /tutorial\_step5 to go to the next step. Click /tutorial\_step3 to go back.
      parse_mode: "Markdown"
      disable_web_page_preview: true
  
  utter_tutorial_step5:
  - custom:
      text: |
        Awesome! In this way you can reply to any messages in a chat as a bot. Now let's try to send a message in a group. First add @mockabot to any group as an administrator. Then type the command /send `"Hello"` in the group to send "Hello" as Mockabot.

        Once you are done with this step, click /tutorial\_step6 to go to the next step. Click /tutorial\_step4 to go back.
      parse_mode: "Markdown"
      disable_web_page_preview: true
  
  utter_tutorial_step6:
  - custom:
      text: |
        Great! Now let's send a message as another bot. The syntax is /send `"<message>"` `<bot_token>`. You can get a bot token by messaging @BotFather and creating a new bot. Once you have created your bot, add it to the same group with @mockabot as an administrator. And then try /send `"Hello" 1234567890:my_bot_token` replacing your bot token received from BotFather. This will send "Hello" to this chat as your new bot.

        Once you are done with this step, click /tutorial\_step7 to go to the next step. Click /tutorial\_step5 to go back.
      parse_mode: "Markdown"
      disable_web_page_preview: true
  
  utter_tutorial_step7:
  - custom:
      text: |
        Awesome! Now that you have sent a message as another bot, you do not need to type the bot token to send messages as that bot. Mockabot will remember the last bot used in a chat. So just /send `"Hello"` should be enough to send "Hello" as the other bot in your group. You can also try replying to an image with /send to post that image as your new bot, or use the /replyto command with any existing message in this group followed by a /reply to reply as your bot. And don't forget you can attach buttons by adding the following syntax *[Buy Now][About, Help]* as part of your message text.

        This is the end of the tutorial. You can view the command usage by clicking /help.

        Click /tutorial\_step6 to go back to the previous step.
      parse_mode: "Markdown"
      disable_web_page_preview: true
 